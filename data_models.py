from datetime import datetime
from typing import List, Dict, Optional, Union
from pydantic import BaseModel

# üìò –ó–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ
class JournalEntry(BaseModel):
    timestamp: str
    text: str
    triggers: List[str]
    physical_sensations: List[str]
    thoughts: List[str]
    emotion: str = ""
    intensity: int = 0

# üìä –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–∏
class ImmediateAnalysis(BaseModel):
    manifested_emotion: str
    intensity: int
    recommendation: Dict[str, Union[List[str], Dict[str, Union[str, List[str]]]]]
    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
    # - short_term: List[str]
    # - scientific_references: List[str]
    # - about: { description: str, causes: List[str] }

# üìà –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑
class LongTermAnalysis(BaseModel):
    most_common_emotion: str
    trending_triggers: List[str]
    physiological_pattern: str
    cognitive_pattern: str
    psychological_state: str
    risk_factors: Dict[str, str]  # —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ
    risky_thoughts: Optional[List[str]] = []  # ‚Üê –î–û–ë–ê–í–¨ –≠–¢–û
    recommendation: Dict
    emotion_trend: Dict[str, Dict[str, int]] = {}
